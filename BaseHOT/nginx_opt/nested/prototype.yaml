heat_template_version: 2013-05-23
description: 'Prototype HOT for VNF'

parameters:
  flavor:
    type: string
  image:
    type: string
  internal_net:
    type: string
  external_net:
    type: string
#  elk_net:
#    type: string
#  elk_security_group:
#    type: string
  security_group:
    type: string

resources:
  # Security Groups
  external_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: external_security_group
      description: Security group for external
      rules:
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
          direction: ingress
          remote_ip_prefix: 0.0.0.0/0
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
          direction: egress
          remote_ip_prefix: 0.0.0.0/0
  # Ports
  # Port for internal network for NGINX Proxy <-> NF communication HTTP/HTTPS
  internal_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: internal_net }
      security_groups: [ { get_resource: security_group } ]

  # Port for external network for NGINX Proxy <-> External (Other 5G Network Functions) communication HTTP/HTTPS
  external_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: external_net }
      security_groups: [ { get_resource: external_security_group } ]

  # Port for ELK network for NGINX Proxy <-> ELK communication
#  elk_port:
#    type: OS::Neutron::Port
#    properties:
#      network_id: { get_param: elk_net }
#      security_groups: [ { get_param: elk_security_group } ]

  # VDU for the NGINX Proxy with Filebeat
  Prototype:
    type: OS::Nova::Server
    depends_on: [ internal_port, external_port ]
    properties:
      flavor: { get_param: flavor }
      image: { get_param: image }
      name: Prototype
      networks:
        - port: { get_resource: internal_port }
        - port: { get_resource: external_port }
#        - port: { get_resource: elk_port }

outputs: {}