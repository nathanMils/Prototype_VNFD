heat_template_version: 2013-05-23
description: 'ELK Base HOT for Sample VNF'

parameters:
  nfv:
    type: json

resources:
  UERANSIM:
    type: UERANSIM.yaml
    depends_on: SMF
    properties:
      flavor: { get_param: [ nfv, VDU, UERANSIM, computeFlavourId ] }
      image: { get_param: [ nfv, VDU, UERANSIM, vcImageId ] }
      5g_network: { get_param: [ nfv, input, networks, 5g_net, id ] }
      5g_access_network: { get_param: [ nfv, input, networks, 5g_access_net, id ] }
      external_network: { get_param: [ nfv, input, networks, external, id ] }
      ip: { get_param: [ nfv, input, nfs, ueransim, ip ] }
      ip_access: { get_param: [ nfv, input, nfs, ueransim, ip_access ] }
      amf_ip: { get_param: [ nfv, input, nfs, amf, ip ] }

  SMF:
    type: SMF.yaml
    depends_on: AMF
    properties:
      flavor: { get_param: [ nfv, VDU, SMF, computeFlavourId ] }
      image: { get_param: [ nfv, VDU, SMF, vcImageId ] }
      elk_network: { get_param: [ nfv, input, networks, elk_net, id ]}
      5g_network: { get_param: [ nfv, input, networks, 5g_net, id ] }
      external_network: { get_param: [ nfv, input, networks, external, id ]}
      3GPP_ip: { get_param: [ nfv, input, nfs, upf, ip ]} 
      elk_ip: { get_param: [ nfv, input, elk, ip ] }
      mysql_ip: { get_param: [ nfv, input, nfs, mysql, ip ]}
      nrf_ip: { get_param: [ nfv, input, nfs, nrf, ip ]}
      filebeat_password: { get_param: [ nfv, input, elk, filebeat_password ] }
      beats_password: { get_param: [ nfv, input, elk, beats_password ] }
      id: { get_param: [ nfv, input, nfs, smf, id ] }
      ip: { get_param: [ nfv, input, nfs, smf, ip ] }

  AMF:
    type: AMF.yaml
    depends_on: UPF
    properties:
      flavor: { get_param: [ nfv, VDU, AMF, computeFlavourId ] }
      image: { get_param: [ nfv, VDU, AMF, vcImageId ] }
      elk_network: { get_param: [ nfv, input, networks, elk_net, id ]}
      5g_network: { get_param: [ nfv, input, networks, 5g_net, id ] }
      external_network: { get_param: [ nfv, input, networks, external, id ]}
      ip: { get_param: [ nfv, input, nfs, amf, ip ]}
      elk_ip: { get_param: [ nfv, input, elk, ip ] }
      mysql_ip: { get_param: [ nfv, input, nfs, mysql, ip ]}
      nrf_ip: { get_param: [ nfv, input, nfs, nrf, ip ]}
      ausf_ip: { get_param: [ nfv, input, nfs, ausf, ip ] }
      udm_ip: { get_param: [ nfv, input, nfs, udm, ip ] }
      filebeat_password: { get_param: [ nfv, input, elk, filebeat_password ] }
      beats_password: { get_param: [ nfv, input, elk, beats_password ] }
      id: { get_param: [ nfv, input, nfs, amf, id ]}

  UPF:
    type: UPF.yaml
    depends_on: EXT_DN
    properties:
      flavor: { get_param: [ nfv, VDU, UPF, computeFlavourId ] }
      image: { get_param: [ nfv, VDU, UPF, vcImageId ] }
      elk_network: { get_param: [ nfv, input, networks, elk_net, id ]}
      5g_network: { get_param: [ nfv, input, networks, 5g_net, id ] }
      5g_core_network: { get_param: [ nfv, input, networks, 5g_core_net, id ] }
      5g_access_network: { get_param: [ nfv, input, networks, 5g_access_net, id ] }
      external_network: { get_param: [ nfv, input, networks, external, id ] }
      ip: { get_param: [ nfv, input, nfs, upf, ip ] }
      ip_core: { get_param: [ nfv, input, nfs, upf, ip_core ] }
      ip_access: { get_param: [ nfv, input, nfs, upf, ip_access ] }
      ext_dn_ip: { get_param: [ nfv, input, nfs, ext_dn, ip ] }
      elk_ip: { get_param: [ nfv, input, elk, ip ] }
      mysql_ip: { get_param: [ nfv, input, nfs, mysql, ip ]}
      nrf_ip: { get_param: [ nfv, input, nfs, nrf, ip ]}
      filebeat_password: { get_param: [ nfv, input, elk, filebeat_password ] }
      beats_password: { get_param: [ nfv, input, elk, beats_password ] }
      id: { get_param: [ nfv, input, nfs, upf, id ] }

  EXT_DN:
    type: EXT_DN.yaml
    depends_on: AUSF
    properties:
      flavor: { get_param: [ nfv, VDU, EXT_DN, computeFlavourId ] }
      image: { get_param: [ nfv, VDU, EXT_DN, vcImageId ] }
      5g_core_network: { get_param: [ nfv, input, networks, 5g_core_net, id ] }
      external_network: { get_param: [ nfv, input, networks, external, id ] }
      ip: { get_param: [ nfv, input, nfs, ext_dn, ip ] }
      upf_ip_core: { get_param: [ nfv, input, nfs, upf, ip_core ] }

  AUSF:
    type: AUSF.yaml
    depends_on: UDM
    properties:
      flavor: { get_param: [ nfv, VDU, AUSF, computeFlavourId ] }
      image: { get_param: [ nfv, VDU, AUSF, vcImageId ] }
      elk_network: { get_param: [ nfv, input, networks, elk_net, id ]}
      5g_network: { get_param: [ nfv, input, networks, 5g_net, id ] }
      external_network: { get_param: [ nfv, input, networks, external, id ]}
      elk_ip: { get_param: [ nfv, input, elk, ip ] }
      mysql_ip: { get_param: [ nfv, input, nfs, mysql, ip ]}
      nrf_ip: { get_param: [ nfv, input, nfs, nrf, ip ]}
      udm_ip: { get_param: [ nfv, input, nfs, udm, ip ]}
      filebeat_password: { get_param: [ nfv, input, elk, filebeat_password ] }
      beats_password: { get_param: [ nfv, input, elk, beats_password ] }
      id: { get_param: [ nfv, input, nfs, ausf, id ] }
      ip: { get_param: [ nfv, input, nfs, ausf, ip ] }

  UDM:
    type: UDM.yaml
    depends_on: UDR
    properties:
      flavor: { get_param: [ nfv, VDU, UDM, computeFlavourId ] }
      image: { get_param: [ nfv, VDU, UDM, vcImageId ] }
      elk_network: { get_param: [ nfv, input, networks, elk_net, id ] }
      5g_network: { get_param: [ nfv, input, networks, 5g_net, id ] }
      external_network: { get_param: [ nfv, input, networks, external, id ] }
      elk_ip: { get_param: [ nfv, input, elk, ip ] }
      mysql_ip: { get_param: [ nfv, input, nfs, mysql, ip ] }
      nrf_ip: { get_param: [ nfv, input, nfs, nrf, ip ] }
      udr_ip: { get_param: [ nfv, input, nfs, udr, ip ] }
      filebeat_password: { get_param: [ nfv, input, elk, filebeat_password ] }
      beats_password: { get_param: [ nfv, input, elk, beats_password ] }
      id: { get_param: [ nfv, input, nfs, udm, id ] }
      ip: { get_param: [ nfv, input, nfs, udm, ip ] }

  UDR:
    type: UDR.yaml
    depends_on: NRF
    properties:
      flavor: { get_param: [ nfv, VDU, UDR, computeFlavourId ] }
      image: { get_param: [ nfv, VDU, UDR, vcImageId ] }
      elk_network: { get_param: [ nfv, input, networks, elk_net, id ]}
      5g_network: { get_param: [ nfv, input, networks, 5g_net, id ] }
      external_network: { get_param: [ nfv, input, networks, external, id ]}
      elk_ip: { get_param: [ nfv, input, elk, ip ] }
      mysql_ip: { get_param: [ nfv, input, nfs, mysql, ip ]}
      nrf_ip: { get_param: [ nfv, input, nfs, nrf, ip ]}
      filebeat_password: { get_param: [ nfv, input, elk, filebeat_password ] }
      beats_password: { get_param: [ nfv, input, elk, beats_password ] }
      id: { get_param: [ nfv, input, nfs, udr, id ] }
      ip: { get_param: [ nfv, input, nfs, udr, ip ] }

  NRF:
    type: NRF.yaml
    depends_on: MySQL
    properties:
      flavor: { get_param: [ nfv, VDU, NRF, computeFlavourId ] }
      image: { get_param: [ nfv, VDU, NRF, vcImageId ] }
      ip: { get_param: [ nfv, input, nfs, nrf, ip ]}
      elk_network: { get_param: [ nfv, input, networks, elk_net, id ]}
      5g_network: { get_param: [ nfv, input, networks, 5g_net, id ] }
      external_network: { get_param: [ nfv, input, networks, external, id ]}
      elk_ip: { get_param: [ nfv, input, elk, ip ] }
      mysql_ip: { get_param: [ nfv, input, nfs, mysql, ip ]}
      filebeat_password: { get_param: [ nfv, input, elk, filebeat_password ] }
      beats_password: { get_param: [ nfv, input, elk, beats_password ] }
      id: { get_param: [ nfv, input, nfs, nrf, id ] }

  MySQL:
    type: MySQL.yaml
    depends_on: ELK
    properties:
      flavor: { get_param: [ nfv, VDU, MySQL, computeFlavourId ] }
      image: { get_param: [ nfv, VDU, MySQL, vcImageId ] }
      ip: { get_param: [ nfv, input, nfs, mysql, ip ]}
      elk_network: { get_param: [ nfv, input, networks, elk_net, id ]}
      5g_network: { get_param: [ nfv, input, networks, 5g_net, id ] }
      external_network: { get_param: [ nfv, input, networks, external, id ]}
      elk_ip: { get_param: [ nfv, input, elk, ip ] }
      filebeat_password: { get_param: [ nfv, input, elk, filebeat_password ] }
      beats_password: { get_param: [ nfv, input, elk, beats_password ] }
      id: { get_param: [ nfv, input, nfs, mysql, id ] }

  ELK:
    type: ELK.yaml
    depends_on: router
    properties:
      flavor: { get_param: [ nfv, VDU, ELK, computeFlavourId ] }
      image: { get_param: [ nfv, VDU, ELK, vcImageId ] }
      ip: { get_param: [ nfv, input, elk, ip ]}
      elastic_password: { get_param: [ nfv, input, elk, elastic_password ]}
      logstash_password: { get_param: [ nfv, input, elk, logstash_password ]}
      kibana_password: { get_param: [ nfv, input, elk, kibana_password ]}
      filebeat_password: { get_param: [ nfv, input, elk, filebeat_password ]}
      beats_password: { get_param: [ nfv, input, elk, beats_password ]}
      net: { get_attr: [ elk_net, elk_net ]}

  5g_net:
    type: 5G_net.yaml
    properties:
      cidr_ipv4: { get_param: [ nfv, input, networks, 5g_net, cidr_ipv4 ] }
      cidr_ipv6: { get_param: [ nfv, input, networks, 5g_net, cidr_ipv6 ] }

  5g_core_net:
    type: 5G_core_net.yaml
    properties:
      cidr_ipv4: { get_param: [ nfv, input, networks, 5g_core_net, cidr_ipv4 ] }
      cidr_ipv6: { get_param: [ nfv, input, networks, 5g_core_net, cidr_ipv6 ] }

  5g_access_net:
    type: 5G_access_net.yaml
    properties:
      cidr_ipv4: { get_param: [ nfv, input, networks, 5g_access_net, cidr_ipv4 ] }
      cidr_ipv6: { get_param: [ nfv, input, networks, 5g_access_net, cidr_ipv6 ] }

  elk_net:
    type: ELK_net.yaml
    properties:
      cidr_ipv4: { get_param: [ nfv, input, networks, elk_net, cidr_ipv4 ] }
      cidr_ipv6: { get_param: [ nfv, input, networks, elk_net, cidr_ipv6 ] }

  router:
    type: Router.yaml
    depends_on:
      - elk_net
      - 5g_net
      - 5g_core_net
      - 5g_access_net
    properties:
      elk_subnet_ipv4: { get_attr: [ elk_net, elk_subnet_ipv4 ] }
      elk_subnet_ipv6: { get_attr: [ elk_net, elk_subnet_ipv6 ] }
      5g_subnet_ipv4: { get_attr: [ 5g_net, 5g_subnet_ipv4 ] }
      5g_subnet_ipv6: { get_attr: [ 5g_net, 5g_subnet_ipv6 ] }
      5g_core_subnet_ipv4: { get_attr: [ 5g_core_net, 5g_core_subnet_ipv4 ] }
      5g_core_subnet_ipv6: { get_attr: [ 5g_core_net, 5g_core_subnet_ipv6 ] }
      5g_access_subnet_ipv4: { get_attr: [ 5g_access_net, 5g_access_subnet_ipv4 ] }
      5g_access_subnet_ipv6: { get_attr: [ 5g_access_net, 5g_access_subnet_ipv6 ] }
      external_net: { get_param: [ nfv, input, networks, external, id ]}

outputs: {}