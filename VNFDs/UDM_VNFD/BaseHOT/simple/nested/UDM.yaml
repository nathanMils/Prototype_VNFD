heat_template_version: 2013-05-23
description: 'UDR HOT for Sample VNF'

parameters:
  flavor:
    type: string
  image:
    type: string
  elk_network:
    type: string
  5g_network:
    type: string
  mysql_ip:
    type: string
  nrf_ip:
    type: string
  external_network:
    type: string
  elk_ip:
    type: string
  filebeat_password:
    type: string
  beats_password:
    type: string

resources:

  UDM:
    type: OS::Nova::Server
    properties:
      flavor: { get_param: flavor }
      image: { get_param: image }
      name: UDM
      networks:
        - port:
            get_resource: elk_CP
        - port:
            get_resource: 5g_CP
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            sudo useradd -m -s /bin/bash nathan
            # Set a password for the new user
            echo "nathan:stupid" | sudo chpasswd
            # Optionally, add the user to the sudoers file for administrative privileges
            echo "nathan ALL=(ALL) NOPASSWD:ALL" | sudo tee -a /etc/sudoers
            ELK_IP=$PARAM_0
            MYSQL_IP=$PARAM_1
            NRF_IP=$PARAM_2

            echo "$ELK_IP elasticsearch" >> /etc/hosts
            echo "$ELK_IP logstash" >> /etc/hosts
            echo "$MYSQL_IP mysql" >> /etc/hosts
            echo "$NRF_IP oai-nrf" >> /etc/hosts

            # Exporting required vars
            export FILEBEAT_INTERNAL_PASSWORD=$PARAM_3
            export BEATS_SYSTEM_PASSWORD=$PARAM_4
            export INTERFACE="ens3"

            # Starting containers and networks
            TARGET_DIR=/opt/prototype_master
            docker load -i $TARGET_DIR/images.tar
            docker compose -f $TARGET_DIR/prototype_compose/docker-compose-base.yml -f $TARGET_DIR/prototype_compose/docker-compose-udm.yml up -d

          params:
            $PARAM_0: { get_param: elk_ip }
            $PARAM_1: { get_param: mysql_ip }
            $PARAM_2: { get_param: nrf_ip }
            $PARAM_3: { get_param: filebeat_password }
            $PARAM_4: { get_param: beats_password }

      

  elk_CP:
    type: OS::Neutron::Port
    properties:
      network: { get_param: elk_network }
      port_security_enabled: false

  5g_CP:
    type: OS::Neutron::Port
    properties:
      network: { get_param: 5g_network }
      port_security_enabled: false

  5g_extvCP:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: public

  5g_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: 5g_extvCP }
      port_id: { get_resource: 5g_CP }
  
  elk_extvCP:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: public

  elk_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: elk_extvCP }
      port_id: { get_resource: elk_CP }
