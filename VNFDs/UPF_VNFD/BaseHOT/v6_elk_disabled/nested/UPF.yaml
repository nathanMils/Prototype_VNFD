heat_template_version: 2013-05-23
description: 'UPF HOT for Sample VNF'

parameters:
  flavor:
    type: string
  image:
    type: string

  5g_network:
    type: string
  5g_core_network:
    type: string
  5g_access_network:
    type: string
  mysql_ip:
    type: string
  nrf_ip:
    type: string
  ip: 
    type: string
  ip_core: 
    type: string
  ip_access:
    type: string
  ext_dn_ip:
    type: string
  
  external_network:
    type: string

resources:

  UPF:
    type: OS::Nova::Server
    properties:
      flavor: { get_param: flavor }
      image: { get_param: image }
      name: UPF
      networks:
        # We want ens3 to be the accesss network
        - port:
            get_resource: 5g_access_CP
        - port:
            get_resource: 5g_CP
        - port:
            get_resource: 5g_core_CP
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash

            sudo useradd -m -s /bin/bash nathan
            echo "nathan:stupid" | sudo chpasswd
            echo "nathan ALL=(ALL) NOPASSWD:ALL" | sudo tee -a /etc/sudoers

            MYSQL_IP=$PARAM_0
            NRF_IP=$PARAM_1
            echo "$MYSQL_IP mysql" >> /etc/hosts
            echo "$NRF_IP oai-nrf" >> /etc/hosts

            export GPP_NETWORK=$PARAM_2
            export IP_2=$PARAM_3
            export IP_3=$PARAM_4
            export EXT_DN_IP=$PARAM_5
            export NRF_IP_ADDR=$PARAM_1

            # Starting upf
            TARGET_DIR=/opt/prototype_master
            docker compose -f $TARGET_DIR/prototype_compose/docker-compose-upf-vpp.yml up -d
          
          params:
            $PARAM_0: { get_param: mysql_ip }
            $PARAM_1: { get_param: nrf_ip }
            $PARAM_2: { get_param: ip }
            $PARAM_3: { get_param: ip_access }
            $PARAM_4: { get_param: ip_core }
            $PARAM_5: { get_param: ext_dn_ip }

  5g_access_CP:
    type: OS::Neutron::Port
    properties:
      network: { get_param: 5g_access_network }
      port_security_enabled: false

  5g_access_extvCP:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: public
  
  5g_access_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: 5g_access_extvCP }
      port_id: { get_resource: 5g_access_CP }

  5g_CP:
    type: OS::Neutron::Port
    properties:
      network: { get_param: 5g_network }
      port_security_enabled: false

  5g_extvCP:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: public

  5g_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: 5g_extvCP }
      port_id: { get_resource: 5g_CP }

  5g_core_CP:
    type: OS::Neutron::Port
    properties:
      network: { get_param: 5g_core_network }
      port_security_enabled: false

  5g_core_extvCP:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: public

  5g_core_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: 5g_core_extvCP }
      port_id: { get_resource: 5g_core_CP }
