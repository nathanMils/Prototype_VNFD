input {
    beats {
        port => 5044
    }
}

filter {
    if [fields][source] == "conn" {

        grok {
            match => {
                "message" => [
                    "^%{NUMBER:ts:float}\t%{DATA:uid}\t%{IP:id_orig_h}\t%{NUMBER:id_orig_p:int}\t%{IP:id_resp_h}\t%{NUMBER:id_resp_p:int}\t%{DATA:proto}\t%{DATA:service}\t%{DATA:duration}\t%{NUMBER:orig_bytes:int}\t%{NUMBER:resp_bytes:int}\t%{DATA:conn_state}\t%{WORD:local_orig}\t%{WORD:local_resp}\t%{NUMBER:missed_bytes:int}\t%{DATA:history}\t%{NUMBER:orig_pkts:int}\t%{NUMBER:orig_ip_bytes:int}\t%{NUMBER:resp_pkts:int}\t%{NUMBER:resp_ip_bytes:int}\t%{DATA:tunnel_parents}"
                ]
            }
        }

        mutate {
            convert => {
                "id_orig_p" => "integer"
                "id_resp_p" => "integer"
                "orig_bytes" => "integer"
                "resp_bytes" => "integer"
                "missed_bytes" => "integer"
                "orig_pkts" => "integer"
                "orig_ip_bytes" => "integer"
                "resp_pkts" => "integer"
                "resp_ip_bytes" => "integer"
            }
            convert => {
                "id_orig_h" => "string"
                "id_resp_h" => "string"
                "proto" => "string"
                "service" => "string"
                "duration" => "string"
                "conn_state" => "string"
                "local_orig" => "boolean"
                "local_resp" => "boolean"
                "history" => "string"
                "tunnel_parents" => "string"
            }
        }

        mutate {
            add_field => { "[@metadata][index]" => "%vnf-%id" }
        }
    } else if [fields][source] == "stats" {
        grok {
            match => {
                "message" => [
                    "^%{NUMBER:ts:float}\t%{DATA:peer}\t%{NUMBER:mem:int}\t%{NUMBER:pkts_proc:int}\t%{NUMBER:bytes_recv:int}\t%{NUMBER:pkts_dropped:int}\t%{NUMBER:pkts_link:int}\t%{NUMBER:pkt_lag:float}\t%{DATA:pkts_filtered}\t%{NUMBER:events_proc:int}\t%{NUMBER:events_queued:int}\t%{NUMBER:active_tcp_conns:int}\t%{NUMBER:active_udp_conns:int}\t%{NUMBER:active_icmp_conns:int}\t%{NUMBER:tcp_conns:int}\t%{NUMBER:udp_conns:int}\t%{NUMBER:icmp_conns:int}\t%{NUMBER:timers:int}\t%{NUMBER:active_timers:int}\t%{NUMBER:files:int}\t%{NUMBER:active_files:int}\t%{NUMBER:dns_requests:int}\t%{NUMBER:active_dns_requests:int}\t%{NUMBER:reassem_tcp_size:int}\t%{NUMBER:reassem_file_size:int}\t%{NUMBER:reassem_frag_size:int}\t%{NUMBER:reassem_unknown_size:int}"
                ]
            }
        }

        mutate {
            convert => {
                "mem" => "integer"
                "pkts_proc" => "integer"
                "bytes_recv" => "integer"
                "pkts_dropped" => "integer"
                "pkts_link" => "integer"
                "pkt_lag" => "float"
                "pkts_filtered" => "integer"
                "events_proc" => "integer"
                "events_queued" => "integer"
                "active_tcp_conns" => "integer"
                "active_udp_conns" => "integer"
                "active_icmp_conns" => "integer"
                "tcp_conns" => "integer"
                "udp_conns" => "integer"
                "icmp_conns" => "integer"
                "timers" => "integer"
                "active_timers" => "integer"
                "files" => "integer"
                "active_files" => "integer"
                "dns_requests" => "integer"
                "active_dns_requests" => "integer"
                "reassem_tcp_size" => "integer"
                "reassem_file_size" => "integer"
                "reassem_frag_size" => "integer"
                "reassem_unknown_size" => "integer"
            }
            convert => {
                "peer" => "string"
                "pkt_lag" => "float"
            }
        }

        mutate {
            add_field => { "[@metadata][index]" => "%vnf-%id" }
        }
    } else {
        drop { }
    }
  
}

output {
    elasticsearch {
        hosts => "elasticsearch:9200"
		user => "logstash_internal"
		password => "${LOGSTASH_INTERNAL_PASSWORD}"
        index => "%{[@metadata][index]}"
    }
}