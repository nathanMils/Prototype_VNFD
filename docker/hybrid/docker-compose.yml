version: '3.7'

services:

  # zeek:
  #   build:
  #     context: ./zeek-monitor  # Path to the directory containing the Dockerfile
  #     dockerfile: Dockerfile
  #   networks:
  #     external:
  #       ipv4_address: 172.20.0.2  # Assign an IP in the external network
  #   privileged: true
  #   volumes:
  #     - ./zeek-monitor/logs:/usr/local/zeek/logs  # Mount logs directory
  #   environment:
  #     - GATEWAY_IP=172.20.0.2  # Hardcoded gateway IP
  #     - EXTERNAL_INTERFACE=eth0  # Hardcoded external interface
  #   restart: unless-stopped  # Restart policy
# ELK STACK
#########################################################################################
  setup:
    profiles:
      - setup
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./setup/lib.sh:/lib.sh:ro,Z
      - ./setup/roles:/roles:ro,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      discovery.type: single-node
    networks:
      - elk
    restart: unless-stopped

  logstash:
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
      - ./logstash/certs:/etc/pki/logstash:ro,Z
    ports:
      - 5044:5044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped
    privileged: true

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - 5601:5601
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped
#########################################################################################

# Prototype
#########################################################################################

  # This is essentially a simulated version of the host, almost a stop gap
  # Essentially address this container as if it were the host VM hosting [ gateway, nf, filebeat ]
  instance:
    build:
      context: instance
    privileged: true
    command: sh /entrypoint.sh
    container_name: instance
    networks:
      fake:
        ipv4_address: 172.19.0.3
    cap_add:
      - NET_ADMIN

  target_instance:
    build:
      context: target_instance
    privileged: true
    command: sh /entrypoint.sh
    container_name: target_instance
    networks:
      fake:
        ipv4_address: 172.19.0.2
      external:
        ipv4_address: 172.20.0.3
    ports:
      - 8090:8090
    cap_add:
      - NET_ADMIN

  gateway:
    build: 
      context: gateway
    privileged: true
    container_name: gateway
    networks:
      external:
        ipv4_address: 172.20.0.2
      internal:
        ipv4_address: 172.21.0.2
    volumes:
      - ./gateway/zeek_logs:/opt/zeek/log
      - ./gateway/zeek_conf/local.zeek:/usr/local/zeek/share/zeek/site/local.zeek
    cap_add:
      - NET_ADMIN
    environment:
      - INTERFACE=eth0

  nf:
    build:
      context: nf
    privileged: true
    command: sh /entrypoint.sh
    container_name: nf
    depends_on:
      - gateway
    networks:
      internal:
        ipv4_address: 172.21.0.3

  filebeat:
    build:
      context: filebeat/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    container_name: filebeat
    user: root
    command:
      - -e
      - --strict.perms=false
    volumes:
      - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro,Z
      - ./filebeat/certs:/etc/pki/filebeat:ro,Z
      - ./gateway/zeek_logs:/usr/local/zeek/logs
      - type: bind
        source: /var/lib/docker/containers
        target: /var/lib/docker/containers
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    environment:
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
      HMAC_SECRET_KEY: ${HMAC_SECRET_KEY:-}
      VNF_TYPE: ${VNF_TYPE:-}
      VNF_ID: ${VNF_ID:-}
    networks:
      - elk
    privileged: true

#########################################################################################

# Networking
#########################################################################################
networks:
  fake:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16

  external:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

  internal:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

  elk:
    driver: bridge
#########################################################################################

# ELK Database volume
# Essentially persists database between starts
# Clear containers/volumes/images to empty
#########################################################################################
volumes:
  elasticsearch:
#########################################################################################
